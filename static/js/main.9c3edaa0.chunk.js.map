{"version":3,"sources":["Store/Actions/Item.js","Store/types.js","Components/Content/Items/CreateItem/CreateItem.component.js","Store/Actions/Comment.js","Store/Actions/SelectedItem.js","Components/Content/Items/ItemsList/Item/Item.component.js","Components/Content/Items/ItemsList/ItemsList.component.js","Components/Content/Items/Items.component.js","Components/Content/Comments/CreateComment/CreateComment.component.js","Components/Content/Comments/CommentsList/CommentItem/CommentItem.component.js","Components/Content/Comments/CommentsList/CommentList.component.js","Components/Content/Comments/Comments.component.js","Components/Content/Content.component.js","Components/Menu/Menu.component.js","Components/Home.component.js","Store/Reducers/index.js","Store/Reducers/Item.js","Store/Reducers/Comment.js","Store/Reducers/SelectedItem.js","Store/index.js","App.js","serviceWorker.js","index.js"],"names":["item","type","payload","itemId","CreateItemInput","props","handleSubmit","event","preventDefault","createItem","state","value","this","id","items","length","title","setState","className","onSubmit","placeholder","onChange","e","target","React","Component","connect","dispatch","ItemActions","comment","Item","deleteItem","deleteComments","data","currentItemComments","comments","filter","commentCount","itemClasses","key","onClick","selectItem","selectedItem","createComment","CommentActions","SelectedItemActions","ItemsList","map","Items","CreateCommentInput","keydownHandler","keyCode","ctrlKey","addComment","text","document","addEventListener","removeEventListener","CommentItem","CommentList","Comments","Content","Menu","Home","combineReducers","action","concat","store","createStore","RootReducer","JSON","parse","localStorage","getItem","subscribe","setItem","stringify","getState","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c3edaa0.chunk.js","sourcesContent":["import { ITEM_CREATE, ITEM_DELETE } from '../types'\r\n\r\nexport default {\r\n  createItem: (item) => {\r\n    return {\r\n      type: ITEM_CREATE,\r\n      payload: {\r\n        item,\r\n      }\r\n    }\r\n  },\r\n  deleteItem: (itemId) => {\r\n    return {\r\n      type: ITEM_DELETE,\r\n      payload: {\r\n        itemId,\r\n      }\r\n    }\r\n  },\r\n}\r\n","export const ITEM_CREATE = 'ITEM_CREATE'\r\nexport const ITEM_DELETE = 'ITEM_DELETE'\r\n\r\nexport const COMMENT_CREATE = 'COMMENT_CREATE'\r\nexport const COMMENTS_DELETE = 'COMMENTS_DELETE'\r\n\r\nexport const ITEM_SELECT = 'ITEM_SELECT'\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './CreateItem.component.css'\r\nimport ItemActions from '../../../../Store/Actions/Item'\r\nclass CreateItemInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {value: ''}\r\n  }\r\n\r\n  createItem() {\r\n    if (!this.state.value) return\r\n    const nextId = this.props.items.length + 1\r\n    const item = {\r\n      id: nextId,\r\n      title: this.state.value,\r\n    }\r\n    this.props.createItem(item)\r\n    this.setState({value: ''})\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.createItem()\r\n  }\r\n  \r\n  render() {\r\n\r\n    const placeholder = 'Type name here...' \r\n\r\n    return (\r\n      <div>\r\n        <form className='title-input-form' onSubmit={this.handleSubmit} >\r\n          <input \r\n            className='item-name-input' \r\n            placeholder={placeholder} \r\n            type=\"text\" \r\n            value={this.state.value} \r\n            onChange={e => this.setState({value: e.target.value})} \r\n          />\r\n          <input className='to-create-item' type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createItem: item => dispatch(ItemActions.createItem(item)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateItemInput)\r\n","import { COMMENT_CREATE, COMMENTS_DELETE } from '../types'\r\n\r\nexport default {\r\n  createComment: (comment) => {\r\n    return {\r\n      type: COMMENT_CREATE,\r\n      payload: {\r\n        comment,\r\n      }\r\n    }\r\n  },\r\n  deleteComments: (itemId) => {\r\n    return {\r\n      type: COMMENTS_DELETE,\r\n      payload: {\r\n        itemId,\r\n      }\r\n    }\r\n  },\r\n}\r\n","import { ITEM_SELECT } from '../types'\r\n\r\nexport default {\r\n  selectItem: (itemId) => {\r\n    return {\r\n      type: ITEM_SELECT,\r\n      payload: {\r\n        itemId,\r\n      }\r\n    }\r\n  },\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport ItemActions from '../../../../../Store/Actions/Item'\r\nimport CommentActions from '../../../../../Store/Actions/Comment'\r\nimport SelectedItemActions from '../../../../../Store/Actions/SelectedItem'\r\n\r\nimport './Item.component.css'\r\nclass Item extends React.Component {\r\n  \r\n  deleteItem(item) {\r\n    this.props.deleteItem(item && item.id)\r\n    this.props.deleteComments(item && item.id)\r\n  }\r\n  \r\n  get itemClasses() {\r\n    const id = this.props.data.id\r\n    return `item ${ id === this.props.selectedItem ? 'selected' : ''}` \r\n  }\r\n\r\n  render() {\r\n   \r\n    const item = this.props.data\r\n    const currentItemComments = this.props.comments.filter(comment => comment.itemId === item.id)\r\n    const commentCount = <span> {\r\n      currentItemComments.length\r\n    } </span>\r\n    return (\r\n     \r\n      <div \r\n        className={this.itemClasses}\r\n        key={`${item.id}${item.title}`}\r\n        onClick={() => this.props.selectItem(item.id)}\r\n      > \r\n        <p>\r\n          {item.title} \r\n          {commentCount} \r\n        </p>\r\n        <button className='to-delete-item' onClick={()=>this.deleteItem(item)}>Delete</button>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n  comments: state.comments,\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createItem: item => dispatch(ItemActions.createItem(item)),\r\n    deleteItem: itemId => dispatch(ItemActions.deleteItem(itemId)),\r\n    createComment: comment => dispatch(CommentActions.createComment(comment)),\r\n    deleteComments: itemId => dispatch(CommentActions.deleteComments(itemId)),\r\n    selectItem: itemId => dispatch(SelectedItemActions.selectItem(itemId)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Item from './Item/Item.component'\r\nimport './ItemsList.component.css'\r\n\r\nclass ItemsList extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"items\">\r\n        {\r\n          this.props.items.map(item =>  <Item key={item.id} data={item} />  \r\n          )\r\n        }   \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ItemsList)\r\n","import React from 'react'\r\n\r\nimport CreateItem from './CreateItem/CreateItem.component'\r\nimport ItemsList from './ItemsList/ItemsList.component'\r\nimport './Items.component.css'\r\n\r\nclass Items extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"items-content\">\r\n        <h2 className='items-header'>Items</h2>\r\n        <CreateItem/>\r\n        <ItemsList/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CommentActions from '../../../../Store/Actions/Comment'\r\nimport SelectedItemActions from '../../../../Store/Actions/SelectedItem'\r\nimport './CreateComment.component.css'\r\nclass CreateCommentInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {value: ''}\r\n  }\r\n\r\n  get event() {\r\n    return 'keydown'\r\n  }\r\n\r\n  addComment() {\r\n    if (!this.state.value) return\r\n    const item = this.props.selectedItem\r\n    if (!item) return \r\n    const nextId = this.props.comments.length + 1\r\n    const comment = {\r\n      id: nextId,\r\n      itemId: item,\r\n      text: this.state.value,\r\n    }\r\n    this.props.createComment(comment)\r\n    this.setState({value: ''})\r\n  }\r\n\r\n  keydownHandler = (e) => {\r\n    if(e.keyCode===13 && e.ctrlKey) this.addComment()\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener(this.event, this.keydownHandler)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener(this.event, this.keydownHandler)\r\n  }\r\n\r\n  render() {\r\n\r\n    return <form className='comments-textarea-container' onSubmit={e => e.preventDefault()} >\r\n      <div className='add-comment-avatar'></div>\r\n      <textarea \r\n        className='comments-textarea'\r\n        value={this.state.value} \r\n        onChange={e => this.setState({value: e.target.value})}\r\n      >\r\n      </textarea>\r\n    </form>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n  comments: state.comments,\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createComment: comment => dispatch(CommentActions.createComment(comment)),\r\n    selectItem: itemId => dispatch(SelectedItemActions.selectItem(itemId)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCommentInput)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './CommentItem.component.css'\r\nclass CommentItem extends React.Component {\r\n\r\n  // getRandomColor() {\r\n  //   const letters = '0123456789ABCDEF';\r\n  //   const color = '#';\r\n  //   for (let i = 0; i < 6; i++) {\r\n  //     color += letters[Math.floor(Math.random() * 16)];\r\n  //   }\r\n  //   return color;\r\n  // }\r\n\r\n  render() {\r\n\r\n    const comment = this.props.data\r\n\r\n    return <div className='comment-item'  key={`${comment.id}${comment.text}`}>\r\n      <div className='avatar' ></div>\r\n      <p className='coments-text'>{comment.text}</p>\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n  comments: state.comments,\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(CommentItem)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CommentItem from './CommentItem/CommentItem.component'\r\nimport './CommentList.component.css'\r\nclass CommentList extends React.Component {\r\n\r\n  render() {\r\n\r\n    return <div className='comments-list' >\r\n     { this.props.comments.map(comment => comment.itemId === this.props.selectedItem \r\n        ? <CommentItem key={comment.id} data={comment} />  \r\n        : null)\r\n    }  \r\n    </div>\r\n  }\r\n\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  comments: state.comments,\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(CommentList)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CreateComment from './CreateComment/CreateComment.component'\r\nimport CommentList from './CommentsList/CommentList.component'\r\nimport './Comments.component.css'\r\n\r\nclass Comments extends React.Component {\r\n\r\n  render() {\r\n \r\n    return (\r\n      <div className='comments-container'>\r\n       <h2 className='comments-header'>Comments #{this.props.selectedItem}</h2>\r\n        <CommentList/>\r\n        <CreateComment/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nexport default connect(mapStateToProps)(Comments)\r\n","import React from 'react'\r\n\r\nimport Items from './Items/Items.component'\r\nimport Comments from './Comments/Comments.component'\r\nimport './Content.component.css'\r\n\r\nclass Content extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"Content\">\r\n        <Items/>\r\n        <Comments/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react'\r\nimport './Menu.component.css'\r\n\r\nclass Menu extends React.Component {\r\n  render() {\r\n    return ( \r\n      <div className='menu'>\r\n          <h1>DAIRY APP</h1>\r\n          <p>Comment with no sense</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Menu\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Content from './Content/Content.component'\r\nimport Menu from './Menu/Menu.component'\r\n\r\nclass Home extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Menu />\r\n        <Content />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import { combineReducers } from 'redux'\r\n\r\nimport ItemReducer from './Item'\r\nimport CommentReducer from './Comment'\r\nimport SelectedItemReducer from './SelectedItem'\r\n\r\nexport default combineReducers({\r\n  items: ItemReducer,\r\n  comments: CommentReducer,\r\n  selectedItem: SelectedItemReducer,\r\n})\r\n","import { ITEM_CREATE, ITEM_DELETE } from '../types'\r\n\r\nexport default (items = [], action) => {\r\n  switch (action.type) {\r\n    case ITEM_CREATE:\r\n      return items.concat(action.payload.item)\r\n    case ITEM_DELETE:\r\n      return items.filter((item) => item.id !== action.payload.itemId)\r\n    default: {\r\n      return items\r\n    }\r\n  }\r\n}\r\n","import { COMMENT_CREATE, COMMENTS_DELETE } from '../types'\r\n\r\nexport default (comments = [], action) => {\r\n  switch (action.type) {\r\n    case COMMENT_CREATE:\r\n      return comments.concat(action.payload.comment)\r\n    case COMMENTS_DELETE:\r\n      return comments.filter((comment) => comment.itemId !== action.payload.itemId)\r\n    default: {\r\n      return comments\r\n    }\r\n  }\r\n}\r\n","import { ITEM_SELECT } from '../types'\r\n\r\nexport default (selectedItem = null, action) => {\r\n  switch (action.type) {\r\n    case ITEM_SELECT:\r\n      return selectedItem = action.payload.itemId\r\n    default: {\r\n      return selectedItem\r\n    }\r\n  }\r\n}\r\n","import { createStore } from 'redux'\r\nimport RootReducer from './Reducers'\r\n\r\nconst store = createStore(\r\n  RootReducer,\r\n  JSON.parse(localStorage.getItem('STATE')) || {},\r\n)\r\n\r\nstore.subscribe(() => localStorage.setItem('STATE', JSON.stringify(store.getState())))\r\n\r\nexport default store","import React from 'react'\r\nimport './App.css'\r\nimport Home from './Components/Home.component'\r\nimport { Provider } from 'react-redux'\r\nimport store from './Store'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Provider store={store} >\r\n          <Home/>\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}