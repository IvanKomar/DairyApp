{"version":3,"sources":["RandomId/RandomId.js","Store/Actions/Item.js","Store/types.js","Components/Content/Items/CreateItem/CreateItem.component.js","Store/Actions/Comment.js","Store/Actions/SelectedItem.js","Components/Content/Items/ItemsList/Item/Item.component.js","Components/Content/Items/ItemsList/ItemsList.component.js","Components/Content/Items/Items.component.js","Components/Content/Comments/CreateComment/CreateComment.component.js","Components/Content/Comments/CommentsList/CommentItem/CommentItem.component.js","Components/Content/Comments/CommentsList/CommentList.component.js","Components/Content/Comments/Comments.component.js","Components/Content/Content.component.js","Components/Menu/Menu.component.js","Components/Home.component.js","Store/Reducers/index.js","Store/Reducers/Item.js","Store/Reducers/Comment.js","Store/Reducers/SelectedItem.js","Store/index.js","App.js","serviceWorker.js","index.js"],"names":["Date","getTime","item","type","payload","itemId","CreateItemInput","props","handleSubmit","event","preventDefault","createItem","state","value","this","id","nextItemId","title","setState","className","onSubmit","placeholder","onChange","e","target","React","Component","connect","items","IdGenerator","dispatch","ItemActions","comment","Item","deleteItem","deleteComments","selectItem","data","currentItemComments","comments","filter","commentCount","length","itemClasses","key","onClick","selectedItem","createComment","CommentActions","SelectedItemActions","ItemsList","map","Items","CreateCommentInput","keydownHandler","keyCode","ctrlKey","addComment","text","document","addEventListener","removeEventListener","CommentItem","CommentList","Comments","findIndex","Content","Menu","Home","combineReducers","action","concat","store","createStore","RootReducer","JSON","parse","localStorage","getItem","subscribe","setItem","stringify","getState","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02f8b7c1.chunk.js","sourcesContent":["export default {\r\n    getRandomId() {\r\n      return new Date().getTime()\r\n    }\r\n  }","import { ITEM_CREATE, ITEM_DELETE } from '../types'\r\n\r\nexport default {\r\n  createItem: (item) => {\r\n    return {\r\n      type: ITEM_CREATE,\r\n      payload: {\r\n        item,\r\n      }\r\n    }\r\n  },\r\n  deleteItem: (itemId) => {\r\n    return {\r\n      type: ITEM_DELETE,\r\n      payload: {\r\n        itemId,\r\n      }\r\n    }\r\n  },\r\n}\r\n","export const ITEM_CREATE = 'ITEM_CREATE'\r\nexport const ITEM_DELETE = 'ITEM_DELETE'\r\n\r\nexport const COMMENT_CREATE = 'COMMENT_CREATE'\r\nexport const COMMENTS_DELETE = 'COMMENTS_DELETE'\r\n\r\nexport const ITEM_SELECT = 'ITEM_SELECT'\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport IdGenerator from '../../../../RandomId/RandomId'\r\nimport './CreateItem.component.css'\r\nimport ItemActions from '../../../../Store/Actions/Item'\r\nclass CreateItemInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {value: ''}\r\n  }\r\n\r\n  createItem() {\r\n    if (!this.state.value) return\r\n    const item = {\r\n      id: this.props.nextItemId,\r\n      title: this.state.value,\r\n    }\r\n    this.props.createItem(item)\r\n    this.setState({value: ''})\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.createItem()\r\n  }\r\n  \r\n  render() {\r\n\r\n    const placeholder = 'Type name here...' \r\n\r\n    return (\r\n      <div>\r\n        <form className='title-input-form' onSubmit={this.handleSubmit} >\r\n          <input \r\n            className='item-name-input' \r\n            placeholder={placeholder} \r\n            type=\"text\" \r\n            value={this.state.value} \r\n            onChange={e => this.setState({value: e.target.value})} \r\n          />\r\n          <input className='to-create-item' type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n  nextItemId: IdGenerator.getRandomId(),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createItem: item => dispatch(ItemActions.createItem(item)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateItemInput)\r\n","import { COMMENT_CREATE, COMMENTS_DELETE } from '../types'\r\n\r\nexport default {\r\n  createComment: (comment) => {\r\n    return {\r\n      type: COMMENT_CREATE,\r\n      payload: {\r\n        comment,\r\n      }\r\n    }\r\n  },\r\n  deleteComments: (itemId) => {\r\n    return {\r\n      type: COMMENTS_DELETE,\r\n      payload: {\r\n        itemId,\r\n      }\r\n    }\r\n  },\r\n}\r\n","import { ITEM_SELECT } from '../types'\r\n\r\nexport default {\r\n  selectItem: (itemId) => {\r\n    return {\r\n      type: ITEM_SELECT,\r\n      payload: {\r\n        itemId,\r\n      }\r\n    }\r\n  },\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport ItemActions from '../../../../../Store/Actions/Item'\r\nimport CommentActions from '../../../../../Store/Actions/Comment'\r\nimport SelectedItemActions from '../../../../../Store/Actions/SelectedItem'\r\n\r\nimport './Item.component.css'\r\nclass Item extends React.Component {\r\n  \r\n  deleteItem(item) {\r\n    this.props.deleteItem(item && item.id)\r\n    this.props.deleteComments(item && item.id)\r\n    this.props.selectItem(item.id = null)\r\n  }\r\n  \r\n  get itemClasses() {\r\n    const id = this.props.data.id\r\n    return `item ${ id === this.props.selectedItem ? 'selected' : ''}` \r\n  }\r\n\r\n  render() {\r\n   \r\n    const item = this.props.data\r\n    const currentItemComments = this.props.comments.filter(comment => comment.itemId === item.id)\r\n    const commentCount = <span> {\r\n      currentItemComments.length\r\n    } </span>\r\n    return (\r\n     \r\n      <div \r\n        className={this.itemClasses}\r\n        key={`${item.id}${item.title}`}\r\n        onClick={() => this.props.selectItem(item.id)}\r\n      > \r\n        <p>\r\n          {item.title} \r\n          {commentCount} \r\n        </p>\r\n        <button className='to-delete-item' onClick={()=>this.deleteItem(item)}>Delete</button>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n  comments: state.comments,\r\n  selectedItem: state.selectedItem,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createItem: item => dispatch(ItemActions.createItem(item)),\r\n    deleteItem: itemId => dispatch(ItemActions.deleteItem(itemId)),\r\n    createComment: comment => dispatch(CommentActions.createComment(comment)),\r\n    deleteComments: itemId => dispatch(CommentActions.deleteComments(itemId)),\r\n    selectItem: itemId => dispatch(SelectedItemActions.selectItem(itemId)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Item from './Item/Item.component'\r\nimport './ItemsList.component.css'\r\n\r\nclass ItemsList extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"items\">\r\n        {\r\n          this.props.items.map(item =>  <Item key={item.id} data={item} />  \r\n          )\r\n        }   \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ItemsList)\r\n","import React from 'react'\r\n\r\nimport CreateItem from './CreateItem/CreateItem.component'\r\nimport ItemsList from './ItemsList/ItemsList.component'\r\nimport './Items.component.css'\r\n\r\nclass Items extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"items-content\">\r\n        <h2 className='items-header'>Items</h2>\r\n        <CreateItem/>\r\n        <ItemsList/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Items;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CommentActions from '../../../../Store/Actions/Comment'\r\nimport SelectedItemActions from '../../../../Store/Actions/SelectedItem'\r\nimport './CreateComment.component.css'\r\n\r\nclass CreateCommentInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {value: ''}\r\n  }\r\n\r\n  get event() {\r\n    return 'keydown'\r\n  }\r\n\r\n  addComment() {\r\n    if (!this.state.value) return\r\n    const item = this.props.selectedItem\r\n    if (!item) return \r\n    const nextId = this.props.comments.length + 1\r\n    const comment = {\r\n      id: nextId,\r\n      itemId: item,\r\n      text: this.state.value,\r\n    }\r\n    this.props.createComment(comment)\r\n    this.setState({value: ''})\r\n  }\r\n\r\n  keydownHandler = (e) => {\r\n    if(e.keyCode===13 && e.ctrlKey) this.addComment()\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener(this.event, this.keydownHandler)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener(this.event, this.keydownHandler)\r\n  }\r\n\r\n  render() {\r\n\r\n    return <form className='comments-textarea-container' onSubmit={e => e.preventDefault()} >\r\n      <div className='add-comment-avatar'></div>\r\n      <textarea \r\n        className='comments-textarea'\r\n        value={this.state.value} \r\n        onChange={e => this.setState({value: e.target.value})}\r\n      >\r\n      </textarea>\r\n    </form>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n  comments: state.comments,\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createComment: comment => dispatch(CommentActions.createComment(comment)),\r\n    selectItem: itemId => dispatch(SelectedItemActions.selectItem(itemId)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCommentInput)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './CommentItem.component.css'\r\nclass CommentItem extends React.Component {\r\n\r\n  // getRandomColor() {\r\n  //   const letters = '0123456789ABCDEF';\r\n  //   const color = '#';\r\n  //   for (let i = 0; i < 6; i++) {\r\n  //     color += letters[Math.floor(Math.random() * 16)];\r\n  //   }\r\n  //   return color;\r\n  // }\r\n\r\n  render() {\r\n\r\n    const comment = this.props.data\r\n\r\n    return <div className='comment-item'  key={`${comment.id}${comment.text}`}>\r\n      <div className='avatar' ></div>\r\n      <p className='coments-text'>{comment.text}</p>\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n  comments: state.comments,\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(CommentItem)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CommentItem from './CommentItem/CommentItem.component'\r\nimport './CommentList.component.css'\r\nclass CommentList extends React.Component {\r\n\r\n  render() {\r\n\r\n    return <div className='comments-list' >\r\n     { this.props.comments.map(comment => comment.itemId === this.props.selectedItem \r\n        ? <CommentItem key={comment.id} data={comment} />  \r\n        : null)\r\n    }  \r\n    </div>\r\n  }\r\n\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  comments: state.comments,\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(CommentList)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CreateComment from './CreateComment/CreateComment.component'\r\nimport CommentList from './CommentsList/CommentList.component'\r\nimport './Comments.component.css'\r\n\r\nclass Comments extends React.Component {\r\n\r\n  render() {\r\n \r\n    return (\r\n      <div className='comments-container'>\r\n        {\r\n          this.props.items.length === 0\r\n            ? <h2 className='comments-header'>Add your first item</h2>\r\n            : !this.props.selectedItem \r\n            ? <h2 className='comments-header'>Choose any item</h2>\r\n            : <h2 className='comments-header'>Comments #{ this.props.items.findIndex( item => item.id === this.props.selectedItem) + 1}</h2>  \r\n        }\r\n      \r\n        <CommentList/>\r\n        <CreateComment/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.items,\r\n  selectedItem: state.selectedItem\r\n})\r\n\r\nexport default connect(mapStateToProps)(Comments)\r\n","import React from 'react'\r\n\r\nimport Items from './Items/Items.component'\r\nimport Comments from './Comments/Comments.component'\r\nimport './Content.component.css'\r\n\r\nclass Content extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"Content\">\r\n        <Items/>\r\n        <Comments/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react'\r\nimport './Menu.component.css'\r\n\r\nclass Menu extends React.Component {\r\n  render() {\r\n    return ( \r\n      <div className='menu'>\r\n          <h1>DAIRY APP</h1>\r\n          <p>Comment with no sense</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Menu\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Content from './Content/Content.component'\r\nimport Menu from './Menu/Menu.component'\r\n\r\nclass Home extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Menu />\r\n        <Content />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import { combineReducers } from 'redux'\r\n\r\nimport ItemReducer from './Item'\r\nimport CommentReducer from './Comment'\r\nimport SelectedItemReducer from './SelectedItem'\r\n\r\nexport default combineReducers({\r\n  items: ItemReducer,\r\n  comments: CommentReducer,\r\n  selectedItem: SelectedItemReducer,\r\n})\r\n","import { ITEM_CREATE, ITEM_DELETE } from '../types'\r\n\r\nexport default (items = [], action) => {\r\n  switch (action.type) {\r\n    case ITEM_CREATE:\r\n      return items.concat(action.payload.item)\r\n    case ITEM_DELETE:\r\n      return items.filter((item) => item.id !== action.payload.itemId)\r\n    default: {\r\n      return items\r\n    }\r\n  }\r\n}\r\n","import { COMMENT_CREATE, COMMENTS_DELETE } from '../types'\r\n\r\nexport default (comments = [], action) => {\r\n  switch (action.type) {\r\n    case COMMENT_CREATE:\r\n      return comments.concat(action.payload.comment)\r\n    case COMMENTS_DELETE:\r\n      return comments.filter((comment) => comment.itemId !== action.payload.itemId)\r\n    default: {\r\n      return comments\r\n    }\r\n  }\r\n}\r\n","import { ITEM_SELECT } from '../types'\r\n\r\nexport default (selectedItem = null, action) => {\r\n  switch (action.type) {\r\n    case ITEM_SELECT:\r\n      return selectedItem = action.payload.itemId\r\n    default: {\r\n      return selectedItem\r\n    }\r\n  }\r\n}\r\n","import { createStore } from 'redux'\r\nimport RootReducer from './Reducers'\r\n\r\nconst store = createStore(\r\n  RootReducer,\r\n  JSON.parse(localStorage.getItem('STATE')) || {},\r\n)\r\n\r\nstore.subscribe(() => localStorage.setItem('STATE', JSON.stringify(store.getState())))\r\n\r\nexport default store","import React from 'react'\r\nimport './App.css'\r\nimport Home from './Components/Home.component'\r\nimport { Provider } from 'react-redux'\r\nimport store from './Store'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Provider store={store} >\r\n          <Home/>\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}